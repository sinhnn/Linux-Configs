################################################################################
# Project name   : 
# File name      : embedded_font_epub.sh
# Created date   : Wed 16 Nov 2016 07:58:52 AM ICT
# Author         : Ngoc-Sinh Nguyen
# Last modified  : Wed 16 Nov 2016 01:40:59 PM ICT
# Guide          : 
###############################################################################
#!/bin/bash

dest=""
title="Convert to epub, remove and embedd font into epub"

command -v ebook-convert > /dev/null 2>&1 || {zenity -error --text="Please install ebook-convert"}
#Remove embeded font:
function rm_font() {
	#function_body
	f="$@"
	# Convert to txt -> remove embedded font
	txt=${f/epub/txt}
	ebook-meta "${f}" --get-cover="${f/epub/jpeg}"
	ebook-convert "$f" "${txt}"
	# Backup ori file 
	mv "${f}" "${f/.epub/_ori.epub}"
	# Convert back to epub file
	ebook-convert "${txt}" "${f}"
	ebook-meta "${f}" --cover="${f/epub/jpeg}"

	rm -f "${txt}"  
	rm -f "${f/epub/jpeg}"
	notify-send "Remove font: ${args}"
}

function embeded_font() {
	f="$@"
	ebook-convert "${f}" "${f/.epub/_vn.epub}" --embed-font-family "Gentium Book Basic"
	notify-send "Embedded font: ${args}"
}

function rm_embedded_font() {
	#function_body
	f="$@"
	echo ${f[@]}
	# Remove embedded font
	txt=${f/epub/txt}
	ebook-meta "${f}" --get-cover="${f/epub/jpeg}"
	ebook-convert "$f" "${txt}"
	# Backup or file
	mv "${f}" "${f/.epub/_ori.epub}"
	# Convert and embedded font 
	ebook-convert "${txt}" "${f}" --embed-font-family "Gentium Book Basic"
	ebook-meta "${f}" --cover="${f/epub/jpeg}"
	rm -f "${txt}"  
	rm -f "${f/epub/jpeg}"
	notify-send "Remove  and embedded font: ${args}"
}

function convert_to_epub()
{
	f="$@"
	ebook-convert "${f[@]}"  "${f[@]%.*}".epub
	notify-send "Converted to epub: ${f[@]}"
}



opts=$(zenity --width=600 --height=450 \
	--list ---title "Epub Convert Options" --text " Epub Convert Options" \
	--checklist --column "" --column "Options" --column "Description" \
	False unem "Remove all embedded fonts" \
	True vn "Embedded Gentium font for VNese" \
	True nook "NOOK ereader: /media/NOOK/My Files/Books" \
	False dir "Select output directory")

if [[ -z "${opt// /}" ]]; then
	exit 0
fi

# Destination
dest=""
if [[ ${opts} == *"nook"* ]]; then
	dest="/media/NOOK/My Files/Books"
elif [[ ${opts} == *"dir"* ]]; then
	dest=$(zenity --file-selection --directory || exit 1)
fi
# Command
em="echo"
rm_em="echo"

if [[ ${opts} == *"epub"* ]]
then
	cv="convert_to_epub"
fi

if [[ ${opts} == *"unem"*"vn"* ]];
then
	em="rm_embedded_font"

else
	if [[ ${opts} == *"unem"* ]]; then
		rm_em="rm_font"
	elif [[ ${opts} == *"vn"* ]]; then
		em="embeded_font"
	fi
fi

for args
do

	if [[ !	"${args##*.}" = "epub" ]] 
	then
		convert_to_epub "${args}"
	fi

	${rm_em} "${args}"
	${em}  "${args}"

	if [[ ${dest// /} ]]; then
		cp  "${args}" "${dest}"
	fi
done
